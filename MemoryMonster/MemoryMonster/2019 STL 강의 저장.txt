============================
 Tue Mar 26 13:51:34 2019
============================

#include <iostream>
#include <string>
#include <algorithm>
#include "MemoryMonster.h"
#include "save.h"

// 62p 1번문제
// std::string 객체로 된 배열을 정의하고, 자신이 선택한 단어들로 초기화한 후
// 반복자를 사용해 배열의 내용을 한 줄에 하나씩 출력하는 프로그램을 작성하라


int main()
{
	string s[5]{"3월", "22일", "MT", "베어스타운", "미세먼지없음"};

	auto b = begin(s);

	while (b != end(s))
	{
		cout << *b << endl;		
		++b;
	}

	save("소스.cpp");
}

============================
 Tue Mar 26 14:03:26 2019
============================

#include <iostream>
#include <string>
#include <algorithm>
#include <iterator>
#include "MemoryMonster.h"
#include "save.h"

// 62p 1번문제
// std::string 객체로 된 배열을 정의하고, 자신이 선택한 단어들로 초기화한 후
// 반복자를 사용해 배열의 내용을 한 줄에 하나씩 출력하는 프로그램을 작성하라


int main()
{
	string s[5]{"C++","Standard","Template","Library","iostream"};

	// transform(어디부터, 어디까지, 어디로, 이렇게 바꿔서);
	transform(begin(s), end(s), ostream_iterator<string>(cout, "\n"),
	[](string& str) 
		{
			auto b = begin(str); 
			while (b != end(str))
			{
				// b가 모음이면 *로 바꿔라
				if (*b == 'a' || *b == 'e' || *b == 'i' || *b == 'o' || *b == 'u')
					*b = '*';
				b++;
			}
			return str;
		}
	);
	

	save("소스.cpp");
}

============================
 Tue Mar 26 14:05:32 2019
============================

#include <iostream>
#include <string>
#include <algorithm>
#include <iterator>
#include "MemoryMonster.h"
#include "save.h"

// 62p 1번문제
// std::string 객체로 된 배열을 정의하고, 자신이 선택한 단어들로 초기화한 후
// 반복자를 사용해 배열의 내용을 한 줄에 하나씩 출력하는 프로그램을 작성하라


int main()
{
	string s[5]{"C++","Standard","Template","Library","iostream"};

	// transform(어디부터, 어디까지, 어디로, 이렇게 바꿔서);
	transform(begin(s), end(s), ostream_iterator<string>(cout, "\n"),
	[](string& str) 
		{
			auto b = begin(str); 
			while (b != end(str))
			{
				// b가 모음이면 *로 바꿔라
				if (*b == 'a' || *b == 'e' || *b == 'i' || *b == 'o' || *b == 'u')
					*b = '*';
				b++;
			}
			return str;
		}
	);

	cout << "원본 string" << endl;

	for (auto b : s)
	{
		cout << b << endl;
	}
	

	save("소스.cpp");
}

============================
 Tue Mar 26 14:11:27 2019
============================

#include <iostream>
#include <string>
#include <algorithm>
#include <iterator>
#include "MemoryMonster.h"
#include "save.h"

// 62p 3번문제 - 대문자로 바꿔서 출력


int main()
{
	string s[5]{"C++","Standard","Template","Library","iostream"};

	// transform(어디부터, 어디까지, 어디로, 이렇게 바꿔서);
	transform(begin(s), end(s), ostream_iterator<string>(cout, "\n"),
		[](string& str) 
		{
			auto b = begin(str); 
			while (b != end(str))
			{
				*b = toupper(*b);
				b++;
			}
			return str;
		}
	);

	cout << "원본 string" << endl;

	for (auto b : s)
	{
		cout << b << endl;
	}

	save("소스.cpp");
}

============================
 Tue Mar 26 14:59:06 2019
============================

#include <iostream>
#include <string>
#include <algorithm>
#include <iterator>
// #include <initializer_list>
#include <array>
#include "MemoryMonster.h"
#include "save.h"

// 2장 순차 컨테이너
// - array
// - vector
// - deque
// - list
// - forward_list


int main()
{
	array<int, 5> a{ 1,2,3,4,5 };

	for (int i = 0; i < 5; i++)
	{
		cout << a[i] << endl;
	}

	save("소스.cpp");
}

============================
 Tue Mar 26 15:03:21 2019
============================

#include <iostream>
#include <string>
#include <algorithm>
#include <iterator>
// #include <initializer_list>
#include <array>
#include "MemoryMonster.h"
#include "save.h"

// 2장 순차 컨테이너
// - array
// - vector
// - deque
// - list
// - forward_list


int main()
{
	array<int, 5> a{ 1,2,3,4,5 };

	cout << "몇 번째 값을 원하니?";
	int num;
	cin >> num;

	try
	{
		cout << a.at(num) << endl;
	}
	catch (exception& e)
	{
		cout << e.what() << endl;
	}

	save("소스.cpp");
}

============================
 Tue Mar 26 15:08:35 2019
============================

#include <iostream>
#include <string>
#include <algorithm>
#include <iterator>
// #include <initializer_list>
#include <array>
#include "MemoryMonster.h"
#include "save.h"

// 2장 순차 컨테이너
// - array
// - vector
// - deque
// - list
// - forward_list


int main()
{
	array<MemoryMonster, 5> a{10,3,30,7,20};

	for (auto p = begin(a); p != end(a); p++)
	{
		cout << *p << endl;
	}

	save("소스.cpp");
}

============================
 Tue Mar 26 15:11:06 2019
============================

#include <iostream>
#include <string>
#include <algorithm>
#include <iterator>
// #include <initializer_list>
#include <array>
#include "MemoryMonster.h"
#include "save.h"

// 2장 순차 컨테이너
// - array
// - vector
// - deque
// - list
// - forward_list


int main()
{
	array<MemoryMonster, 5> a{10,3,30,7,20};

	for (int i = 0; i < a.size(); i++)
	{
		cout << a[i] << endl;
	}

	save("소스.cpp");
}

============================
 Tue Mar 26 15:18:34 2019
============================

#include <iostream>
#include <string>
#include <algorithm>
#include <iterator>
// #include <initializer_list>
#include <array>
#include "MemoryMonster.h"
#include "save.h"

// 2장 순차 컨테이너
// - array
// - vector
// - deque
// - list
// - forward_list


int main()
{
	array<MemoryMonster, 5> a{10,3,30,7,20};

	// a의 각 원소를 오름차순으로 정렬하라

	for (int i = 0; i < a.size(); i++)
	{
		char* p = a[i].getP();
		sort(p, p + a[i].get());

		cout << a[i] << endl;
	}

	save("소스.cpp");
}